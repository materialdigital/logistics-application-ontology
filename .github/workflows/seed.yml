# SEEDING ODK workflow

name: seed odk

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ontology_id:
        description: 'Ontology ID (replaces id in seed.yaml)'
        required: true
      uribase_suffix:
        description: 'URI base suffix (replaces uribase_suffix in seed.yaml)'
        required: true
      odk_tag:
        description: 'ODK Docker tag to use'
        required: false
        default: 'latest'
      config_file:
        description: 'Configuration file name'
        required: false
        default: 'seed-template.yaml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "seed_ontology"
  seed_ontology:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: obolibrary/odkfull:${{ github.event.inputs.odk_tag || 'latest' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Git config
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Generate unique branch name
        run: |
          BRANCH_NAME="fresh-seed-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Extract GitHub org and repo
        run: |
          GITHUB_ORG=$(echo "${{ github.repository }}" | cut -d'/' -f1)
          GITHUB_REPO=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          echo "GITHUB_ORG=$GITHUB_ORG" >> $GITHUB_ENV
          echo "GITHUB_REPO=$GITHUB_REPO" >> $GITHUB_ENV
          echo "GitHub Organization: $GITHUB_ORG"
          echo "GitHub Repository: $GITHUB_REPO"

      - name: Verify seed config file exists
        run: |
          if [ ! -f "${{ github.event.inputs.config_file || 'seed-template.yaml' }}" ]; then
            echo "Error: Configuration file ${{ github.event.inputs.config_file || 'seed-template.yaml' }} not found!"
            exit 1
          fi
          echo "Using configuration file: ${{ github.event.inputs.config_file || 'seed-template.yaml' }}"

      - name: Update seed-template.yaml with input values
        run: |
          CONFIG_FILE="${{ github.event.inputs.config_file || 'seed-template.yaml' }}"
          
          echo "Original seed-template.yaml content:"
          cat "$CONFIG_FILE"
          
          # Replace id value
          sed -i "s/^id:.*/id: ${{ github.event.inputs.ontology_id }}/" "$CONFIG_FILE"
          
          # Replace uribase_suffix value
          sed -i "s/^uribase_suffix:.*/uribase_suffix: ${{ github.event.inputs.uribase_suffix }}/" "$CONFIG_FILE"
          
          # Replace uribase value
          sed -i "s/^uribase_suffix:.*/uribase_suffix: https://w3id.org/pmd/ao/${{ github.event.inputs.uribase_suffix }}/" "$CONFIG_FILE"
          
          # Replace github_org value
          sed -i "s/^github_org:.*/github_org: $GITHUB_ORG/" "$CONFIG_FILE"
          
          # Replace repo value
          sed -i "s/^repo:.*/repo: $GITHUB_REPO/" "$CONFIG_FILE"
          
          echo "Updated seed-template.yaml content:"
          cat "$CONFIG_FILE"

      - name: Run ODK seed
        env:
          ODK_IMAGE: odkfull
          ODK_TAG: ${{ github.event.inputs.odk_tag || 'latest' }}
          ODK_GITNAME: ${{ github.actor }}
          ODK_GITEMAIL: ${{ github.actor }}@users.noreply.github.com
        run: |
          echo "This script only works with ODK 1.3.2 and later. For ODK 1.3.1 or earlier, use https://raw.githubusercontent.com/INCATools/ontology-development-kit/v1.3.1/seed-via-docker.sh"
          /tools/odk.py seed \
            --gitname "$ODK_GITNAME" \
            --gitemail "$ODK_GITEMAIL" \
            -c \
            -C ${{ github.event.inputs.config_file || 'seed-template.yaml' }}
      
      - name: Copy generated files to root
        run: |
          TARGET_DIR="target/${{ github.event.inputs.ontology_id }}"
          if [ ! -d "$TARGET_DIR" ]; then
            echo "Error: Target directory $TARGET_DIR not found!"
            exit 1
          fi
          
          echo "Copying files from $TARGET_DIR to root, excluding .git and .github directories..."
          
          # Copy all files and directories except .git and .github
          find "$TARGET_DIR" -mindepth 1 -maxdepth 1 ! -name '.git' ! -name '.github' -exec cp -r {} . \;
          
          # List what was copied
          echo "Files copied to root:"
          ls -la

      - name: Clean up target directory
        run: |
          echo "Removing target directory to avoid git conflicts..."
          rm -rf target/
          git status

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          branch: ${{ env.BRANCH_NAME }}
          base: main
          title: "ODK Seed: ${{ github.event.inputs.ontology_id }}"
          commit-message: "ODK seed generated files for ${{ github.event.inputs.ontology_id }} using ${{ github.event.inputs.config_file || 'seed.yaml' }}"
          body: |
            ## ODK Seed Generated Files
            
            - **Ontology ID**: `${{ github.event.inputs.ontology_id }}`
            - **URI Base Suffix**: `${{ github.event.inputs.uribase_suffix }}`
            - **GitHub Organization**: `${{ env.GITHUB_ORG }}`
            - **Repository**: `${{ env.GITHUB_REPO }}`
            - **Config File**: `${{ github.event.inputs.config_file || 'seed-template.yaml' }}`
            - **ODK Tag**: `${{ github.event.inputs.odk_tag || 'latest' }}`
            
            This PR contains the generated ontology files from ODK seed.
